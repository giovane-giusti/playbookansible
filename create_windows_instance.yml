---
 - name: Provisionando uma instância Windows na EC2
   hosts: localhost
   connection: local
   gather_facts: True


   vars:
     #instance_type: t2.micro
     instance_type: "{{ flavor }}"
     security_group: WinRM-sg
     image: ami-05bb2dae0b1de90b3
     #region: sa-east-1
     region: "{{ regiao }}"
     vm_name: "{{ hostname }}"

   tasks:  
       
     - name: Criação do security group
       local_action:
         module: ec2_group
         name: "{{ security_group }}"
         description: Security group para novas instancias EC2
         region: "{{ region }}"
         rules:       
         - proto: tcp
           from_port: 80
           to_port: 80
           cidr_ip: 0.0.0.0/0
         - proto: tcp
           from_port: 5986
           to_port: 5986
           cidr_ip: 0.0.0.0/0
         - proto: tcp
           from_port: 5985
           to_port: 5985
           cidr_ip: 0.0.0.0/0         
         - proto: tcp
           from_port: 3389
           to_port: 3389
           cidr_ip: 0.0.0.0/0
         - proto: icmp
           from_port: -1
           to_port: -1
           cidr_ip: 0.0.0.0/0
         rules_egress:
         - proto: -1
           cidr_ip: 0.0.0.0/0
       register: sg_out  
            
     - name: Criação da instancia Windows na EC2
       ec2:
         group: "{{ security_group }}"
         instance_type: "{{ flavor }}"
         image: "{{ image }}"
         region: "{{ regiao }}"
         key_name: windows
         user_data: "{{ lookup('template', 'winrm.j2') }}"
         wait: yes
         wait_timeout: 500
         count: 1
         instance_tags:
           Name: "{{ vm_name }}"
         count_tag:
           Name: "{{ vm_name }}"
       register: ec2
       
         
     - name: Esperar por uma conexão WinRM nos hosts
       wait_for:
         port: 5986
         host: "{{ item.public_ip }}"
         timeout: 300
       with_items: "{{ ec2.instances }}"
       
       
     - name: "Adicionar os hosts ao inventário"
       add_host:
         name: win-instance-"{{ item.id }}"
         ansible_host: "{{ hostname }}"
         groups: windows
       with_items: "{{ ec2.instances }}"
